#!/bin/sh

################################################################################
# create a new, managed REX-Ray Docker plug-in
#
# usage: ndp DRIVER
#
################################################################################

usage() {
    echo "usage: ndp DRIVER"
	exit 1
}

# assign the driver's name
DNAME=$1

if [ -z $DNAME ]; then
  usage
  exit 1
fi

# the plug-in root directory
PROOT=.docker/plugins

# assign the driver's directory if not already set via the -d flag
DPATH=${PROOT}/${DNAME}

# create the root directory
mkdir -p ${DPATH}

# create the plug-in's README.md
cat << EOF > ${DPATH}/README.md
# REX-Ray Docker Plug-in for ${DNAME}
EOF

# create the plug-in's config.json file
cat << EOF > ${DPATH}/config.json
{
      "Args": {
        "Description": "",
        "Name": "",
        "Settable": null,
        "Value": null
      },
      "Description": "REX-Ray for ${DNAME}",
      "Documentation": "https://github.com/codedellemc/rexray/.docker/plugin/${DNAME}",
      "Entrypoint": [
        "/rexray.sh", "rexray", "start", "-f", "--nopid"
      ],
      "Env": [
        {
          "Description": "",
          "Name": "REXRAY_FSTYPE",
          "Settable": [
            "value"
          ],
          "Value": "ext4"
        },
        {
          "Description": "",
          "Name": "REXRAY_LOGLEVEL",
          "Settable": [
            "value"
          ],
          "Value": "warn"
        },
        {
          "Description": "",
          "Name": "REXRAY_PREEMPT",
          "Settable": [
            "value"
          ],
          "Value": "false"
        }
      ],
      "Interface": {
        "Socket": "rexray.sock",
        "Types": [
          "docker.volumedriver/1.0"
        ]
      },
      "Linux": {
        "AllowAllDevices": true,
        "Capabilities": ["CAP_SYS_ADMIN"],
        "Devices": null
      },
      "Mounts": [
        {
          "Source": "/dev",
          "Destination": "/dev",
          "Type": "bind",
          "Options": ["rbind"]
        }
      ],
      "Network": {
        "Type": "host"
      },
      "PropagatedMount": "/var/lib/libstorage/volumes",
      "User": {},
      "WorkDir": ""
}
EOF

echo "The plug-in has been successfully created!"
echo
echo "To build the plug-in, please execute the following command:"
echo
echo "    \$ DRIVERS=${DNAME} make build-docker-plugin"
echo
echo "To include this plug-in as part of REX-Ray's CI process,"
echo "please edit the .travis.yml file and find the section near"
echo "the top of the file that looks like this:"
echo
echo "    env:"
echo "      - REXRAY_BUILD_TYPE="
echo "      - REXRAY_BUILD_TYPE=client"
echo "      - REXRAY_BUILD_TYPE=agent"
echo "      - REXRAY_BUILD_TYPE=controller"
echo "      - REXRAY_BUILD_TYPE= DRIVERS=ebs"
echo "      - REXRAY_BUILD_TYPE= DRIVERS=efs"
echo "      ..."
echo
echo "Create a new entry at the end of the above section:"
echo
echo "      - REXRAY_BUILD_TYPE= DRIVERS=${DNAME}"
echo
echo "That's all there is to it! Now the new plug-in will be a"
echo "part of REX-Ray's CI proces, built and deployed with the"
echo "rest of the REX-Ray managed plug-ins for Docker!"
echo
printf "Would you like to build the plug-in now? (yes/no) "

read BUILD_NOW
BUILD_NOW=$(echo $BUILD_NOW | tr /A-Z/ /a-z/)
if [ ! "$BUILD_NOW" = "y" ] && [ ! "$BUILD_NOW" = "yes" ]; then
  exit 0
fi

echo
echo "Beginning Build Process (may take a few minutes to complete)"
echo

# build rexray with the specified driver, for linux, using docker
echo DRIVERS=${DNAME} DGOOS=linux make docker-build
DRIVERS=${DNAME} DGOOS=linux make docker-build

# build the plug-in using the rexray binary that was just built
echo DRIVERS=${DNAME} make docker-build-plugin
DRIVERS=${DNAME} make docker-build-plugin
